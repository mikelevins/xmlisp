<?xml version="1.0"?>
<behavior comments="I am user controlled">
  <method disclosed="true">
    <while-running/>
    <rule>
      <if>
        <see shape="CREATURE Creature">
          <direction/>
        </see>
        <test expression1="food" expression2="0"/>
      </if>
      <then>
        <change shape="DEAD_CREATURE Creature">
          <direction/>
        </change>
        <say text="Rest In Piece After ~@Cycles Cycles"/>
        <stop-simulation/>
      </then>
    </rule>
    <rule>
      <if>
        <stacked adjacency="Somewhere Above" shape="GROUND Ground"/>
      </if>
      <then>
        <message selector="Navigate_With_Keys">
          <direction/>
        </message>
        <message selector="Eat">
          <direction/>
        </message>
        <message selector="Advance">
          <direction/>
        </message>
        <message selector="Perceive">
          <direction/>
        </message>
        <message selector="Set_Heading">
          <direction/>
        </message>
        <set attribute="@CYCLES" value="@Cycles + 1"/>
      </then>
    </rule>
  </method>
  <method comments="Use Cursor Keys To Set Heading">
    <on selector="Navigate_With_Keys"/>
    <rule>
      <if>
        <key label="up arrow"/>
      </if>
      <then>
        <set attribute="HEADING" value="0"/>
        <rotate-to roll-angle="Heading * 90"/>
      </then>
    </rule>
    <rule>
      <if>
        <key label="left arrow"/>
      </if>
      <then>
        <set attribute="HEADING" value="1"/>
        <rotate-to roll-angle="Heading * 90"/>
      </then>
    </rule>
    <rule>
      <if>
        <key label="down arrow"/>
      </if>
      <then>
        <set attribute="HEADING" value="2"/>
        <rotate-to roll-angle="Heading * 90"/>
      </then>
    </rule>
    <rule>
      <if>
        <key label="right arrow"/>
      </if>
      <then>
        <set attribute="HEADING" value="3"/>
        <rotate-to roll-angle="Heading * 90"/>
      </then>
    </rule>
  </method>
  <method disclosed="true" comments="Eat Food Below">
    <on selector="Eat"/>
    <rule>
      <if>
        <stacked shape="FOOD_0 Food"/>
      </if>
      <then>
        <set attribute="FOOD" value="Food - 1"/>
      </then>
    </rule>
    <rule>
      <if/>
      <then>
        <move disclosed="true" duration="0">
          <direction dcol="1"/>
        </move>
        <message selector="Eat">
          <direction dcol="-1"/>
        </message>
        <move disclosed="true" duration="0">
          <direction dcol="-1"/>
        </move>
      </then>
    </rule>
  </method>
  <method comments="Take One Step In The Direction Of The Heading">
    <on selector="Advance"/>
    <rule>
      <if>
        <test expression1="Heading" expression2="0"/>
        <empty>
          <direction drow="1"/>
        </empty>
      </if>
      <then>
        <message selector="Wrap_Down">
          <direction/>
        </message>
      </then>
    </rule>
    <rule>
      <if>
        <test expression1="Heading" expression2="0"/>
      </if>
      <then>
        <move>
          <direction drow="1"/>
        </move>
      </then>
    </rule>
    <rule>
      <if>
        <test expression1="Heading" expression2="1"/>
        <empty>
          <direction dcol="-1"/>
        </empty>
      </if>
      <then>
        <message selector="Wrap_Right">
          <direction/>
        </message>
      </then>
    </rule>
    <rule>
      <if>
        <test expression1="Heading" expression2="1"/>
      </if>
      <then>
        <move>
          <direction dcol="-1"/>
        </move>
      </then>
    </rule>
    <rule>
      <if>
        <test expression1="Heading" expression2="2"/>
        <empty>
          <direction drow="-1"/>
        </empty>
      </if>
      <then>
        <message selector="Wrap_Up">
          <direction/>
        </message>
      </then>
    </rule>
    <rule>
      <if>
        <test expression1="Heading" expression2="2"/>
      </if>
      <then>
        <move>
          <direction drow="-1"/>
        </move>
      </then>
    </rule>
    <rule>
      <if>
        <test expression1="Heading" expression2="3"/>
        <empty>
          <direction dcol="1"/>
        </empty>
      </if>
      <then>
        <message selector="Wrap_Left">
          <direction/>
        </message>
      </then>
    </rule>
    <rule>
      <if>
        <test expression1="Heading" expression2="3"/>
      </if>
      <then>
        <move>
          <direction dcol="1"/>
        </move>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Wrap_Down"/>
    <rule>
      <if>
        <empty>
          <direction drow="-1"/>
        </empty>
      </if>
      <then/>
    </rule>
    <rule>
      <if/>
      <then>
        <move disclosed="true" duration="0.1">
          <direction drow="-1"/>
        </move>
        <message selector="Wrap_Down">
          <direction/>
        </message>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Wrap_Right"/>
    <rule>
      <if>
        <empty>
          <direction dcol="1"/>
        </empty>
      </if>
      <then/>
    </rule>
    <rule>
      <if/>
      <then>
        <move disclosed="true" duration="0.1">
          <direction dcol="1"/>
        </move>
        <message selector="Wrap_Right">
          <direction/>
        </message>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Wrap_Left"/>
    <rule>
      <if>
        <empty>
          <direction dcol="-1"/>
        </empty>
      </if>
      <then/>
    </rule>
    <rule>
      <if/>
      <then>
        <move duration="0.1">
          <direction dcol="-1"/>
        </move>
        <message selector="Wrap_Left">
          <direction/>
        </message>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Wrap_Up"/>
    <rule>
      <if>
        <empty>
          <direction drow="1"/>
        </empty>
      </if>
      <then/>
    </rule>
    <rule>
      <if/>
      <then>
        <move disclosed="true" duration="0.1">
          <direction drow="1"/>
        </move>
        <message selector="Wrap_Up">
          <direction/>
        </message>
      </then>
    </rule>
  </method>
  <method comments="Look For Food Up, Down, Left, Right And Below">
    <on selector="Perceive"/>
    <rule>
      <if/>
      <then>
        <broadcast class-name="Brain" selector="Reset"/>
        <message selector="Perceive_Up">
          <direction/>
        </message>
        <message selector="Perceive_Down">
          <direction/>
        </message>
        <message selector="Perceive_Left">
          <direction/>
        </message>
        <message selector="Perceive_Right">
          <direction/>
        </message>
        <message selector="Perceive_Below">
          <direction/>
        </message>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Perceive_Up"/>
    <rule>
      <if>
        <empty>
          <direction drow="1"/>
        </empty>
      </if>
      <then>
        <set attribute="@INC" value="1"/>
        <message selector="Food_Down">
          <direction drow="-1"/>
        </message>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
    <rule>
      <if>
        <see negated="true" shape="FOOD_0 Food">
          <direction drow="1"/>
        </see>
      </if>
      <then>
        <set attribute="@INC" value="1"/>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Perceive_Right"/>
    <rule>
      <if>
        <empty>
          <direction dcol="1"/>
        </empty>
      </if>
      <then>
        <set attribute="@INC" value="2"/>
        <message selector="Food_Left">
          <direction dcol="-1"/>
        </message>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
    <rule>
      <if>
        <see negated="true" shape="FOOD_0 Food">
          <direction dcol="1"/>
        </see>
      </if>
      <then>
        <set attribute="@INC" value="2"/>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Perceive_Down"/>
    <rule>
      <if>
        <empty>
          <direction drow="-1"/>
        </empty>
      </if>
      <then>
        <set attribute="@INC" value="4"/>
        <message selector="Food_Up">
          <direction drow="1"/>
        </message>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
    <rule>
      <if>
        <see negated="true" shape="FOOD_0 Food">
          <direction drow="-1"/>
        </see>
      </if>
      <then>
        <set attribute="@INC" value="4"/>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Perceive_Left"/>
    <rule>
      <if>
        <empty>
          <direction dcol="-1"/>
        </empty>
      </if>
      <then>
        <set attribute="@INC" value="8"/>
        <message selector="Food_Right">
          <direction dcol="1"/>
        </message>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
    <rule>
      <if>
        <see negated="true" shape="FOOD_0 Food">
          <direction dcol="-1"/>
        </see>
      </if>
      <then>
        <set attribute="@INC" value="8"/>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Perceive_Below"/>
    <rule>
      <if>
        <stacked negated="true" shape="FOOD_0 Food"/>
      </if>
      <then>
        <set attribute="@INC" value="16"/>
        <broadcast class-name="Brain" selector="Inc"/>
      </then>
    </rule>
  </method>
  <method comments="Compute Random Gene Sequence G0 - G31 Each With Value 0-4">
    <on selector="Make_Gene"/>
    <rule>
      <if/>
      <then>
        <set attribute="G0" value="Random(5)"/>
        <set attribute="G1" value="Random(5)"/>
        <set attribute="G2" value="Random(5)"/>
        <set attribute="G3" value="Random(5)"/>
        <set attribute="G4" value="Random(5)"/>
        <set attribute="G5" value="Random(5)"/>
        <set attribute="G6" value="Random(5)"/>
        <set attribute="G7" value="Random(5)"/>
        <set attribute="G8" value="Random(5)"/>
        <set attribute="G9" value="Random(5)"/>
        <set attribute="G10" value="Random(5)"/>
        <set attribute="G11" value="Random(5)"/>
        <set attribute="G12" value="Random(5)"/>
        <set attribute="G13" value="Random(5)"/>
        <set attribute="G14" value="Random(5)"/>
        <set attribute="G15" value="Random(5)"/>
        <set attribute="G16" value="Random(5)"/>
        <set attribute="G17" value="Random(5)"/>
        <set attribute="G18" value="Random(5)"/>
        <set attribute="G19" value="Random(5)"/>
        <set attribute="G20" value="Random(5)"/>
        <set attribute="G21" value="Random(5)"/>
        <set attribute="G22" value="Random(5)"/>
        <set attribute="G23" value="Random(5)"/>
        <set attribute="G24" value="Random(5)"/>
        <set attribute="G25" value="Random(5)"/>
        <set attribute="G26" value="Random(5)"/>
        <set attribute="G27" value="Random(5)"/>
        <set attribute="G28" value="Random(5)"/>
        <set attribute="G29" value="Random(5)"/>
        <set attribute="G30" value="Random(5)"/>
        <set attribute="G31" value="Random(5)"/>
      </then>
    </rule>
  </method>
  <method>
    <when-creating-new-agent/>
    <rule>
      <if/>
      <then>
        <message selector="Make_Gene">
          <direction/>
        </message>
        <message selector="Show_Gene">
          <direction/>
        </message>
        <set attribute="@CYCLES" value="0"/>
        <set attribute="FOOD" value="5"/>
      </then>
    </rule>
  </method>
  <method comments="If Selected Show Gene">
    <on selector="Show_Gene"/>
    <rule>
      <if/>
      <then>
        <broadcast class-name="Brain" selector="Reset"/>
        <set attribute="@DIRECTION" value="G0"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G1"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G2"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G3"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G4"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G5"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G6"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G7"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G8"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G9"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G10"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G11"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G12"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G13"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G14"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G15"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G16"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G17"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G18"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G19"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G20"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G21"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G22"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G23"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G24"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G25"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G26"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G27"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G28"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G29"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G30"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
        <set attribute="@DIRECTION" value="G31"/>
        <broadcast class-name="Brain" selector="Write_Direction_And_Advance"/>
      </then>
    </rule>
  </method>
  <method>
    <on selector="Set_Heading"/>
    <rule>
      <if/>
      <then>
        <broadcast class-name="Brain" selector="Determine_Direction"/>
        <set attribute="HEADING" value="@Direction"/>
        <rotate-to roll-angle="Heading * -90"/>
      </then>
    </rule>
  </method>
</behavior>